@import "../imports/mixins";
@import "../imports/variables";

/* Buttons */
.button {
  padding: 0 16px;
  height: 40px;
  outline: none;
  border-radius: 100px;
  font-weight: 500;
  position: relative;
  cursor: pointer;

  /* Main Button */
  &.stroke {
    padding: 0 14px;
  }

  /* Main Primary Button */
  &.main.primary {
    @include button-main(var(--PMain), $PMain);
    .mat-ripple-element {
      background: rgba(255, 255, 255, 0.1);
    }
  }

  /* Main Secondary Button */
  &.main.secondary {
    @include button-main(var(--SMain), $SMain);
    .mat-ripple-element {
      background: rgba(255, 255, 255, 0.1);
    }
  }

  /* Stroke Primary Button */
  &.stroke.primary {
    @include button-stroke(var(--PMain), $PMain);
    .mat-ripple-element {
      background-color: $PMain;
      background-color: var(--PMain);
      opacity: 0.1;
    }
    &:hover .mat-button-focus-overlay {
      background-color: $PMain;
      background-color: var(--PMain);
      opacity: 0.05;
    }
  }

  /* Stroke Secondary Button */
  &.stroke.secondary {
    @include button-stroke(var(--SMain), $SMain);
    .mat-ripple-element {
      background-color: $SMain;
      background-color: var(--SMain);
      opacity: 0.1;
    }
    &:hover .mat-button-focus-overlay {
      background-color: $SMain;
      background-color: var(--SMain);
      opacity: 0.04;
    }
  }

  /* White Button (background white and shadow) */
  &.white {
    background-color: white;
    @include button-basic("white");
    @include shadow-btn();
    &:hover {
      background-color: $Hover;
      background-color: var(--Hover);
    }
    &[disabled],
    &[disabled][disabled],
    &[disabled]:hover,
    &[disabled][disabled]:hover {
      @include shadow-btn();
    }
    .mat-ripple-element {
      background-color: rgba(0, 0, 0, 0.1);
    }
  }

  /* Basic Button (background transparent) */
  &.basic {
    @include button-basic('transparent');
    &:hover {
      background-color: $Hover;
      background-color: var(--Hover);
      box-shadow: none;
    }
    &[disabled],
    &[disabled][disabled] {
      background-color: transparent;
      color: $Disable;
      color: var(--Disable);
      cursor: default;
    }
    .mat-ripple-element {
      background-color: rgba(0, 0, 0, 0.1);
    }
  }

  /* Single buttons (icon only) */
  &.single {
    padding: 0 5px;
    min-width: 40px;
    i {
      margin-right: 0;
    }
  }

  /* Disabled Button */
  &[disabled],
  &[disabled][disabled] {
    border-color: transparent;
    background-color: $Ripple;
    color: $Disable;
    box-shadow: none;
    pointer-events: none;
    cursor: default;
    &:hover {
      background-color: $Ripple;
      box-shadow: none;
    }
  }

  /* Hide label on mobile screens */
  &.hide-label-on-mobile {
    @media only screen and (max-width: $media-mobile) {
      padding: 0 5px;
      min-width: 40px;
      i {
        margin-right: 0;
      }
    }
  }
  &.hide-label-on-mobile .button-label {
    @media only screen and (max-width: $media-mobile) {
      display: none;
    }
  }

  /* Hover effects */
  &:hover {
    @include shadow-btn();
  }

  &::-moz-focus-inner {
    border: 0;
  }

  .mat-button-wrapper {
    display: flex;
    justify-content: center;
  }

  /* Icon inside button */
  i {
    display: inline-block;
    vertical-align: middle;
    font-size: 24px;
    margin-top: -2px;
    margin-right: 2px;
  }
}

/* Mat Border Radius */
button[mat-button],
button[mat-raised-button],
button[mat-stroked-button],
button[mat-flat-button] {
  border-radius: 24px;
}

/* Mat Box Shadow Standard */
button[mat-button]:hover,
button[mat-raised-button]:hover,
button[mat-stroked-button]:hover,
button[mat-flat-button]:hover,
button[mat-mini-fab]:hover {
  @include shadow-btn();
}

/* Mat Overlay Transparent*/
.button[disabled] .mat-button-focus-overlay,
.button[disabled][disabled] .mat-button-focus-overlay {
  background-color: rgba(255, 255, 255, 0);
}

/* Inputs Min Height */
input[type="date"],
input[type="email"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input.mat-input-element,
textarea {
  min-height: 18px;
}
